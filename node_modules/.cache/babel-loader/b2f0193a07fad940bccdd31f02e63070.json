{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekahi\\\\Developments\\\\Homeworks\\\\Portfolio-React\\\\src\\\\components\\\\NavBar.js\";\nimport React from 'react'; // Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row w-100 p-3 bg-info position-relative start-50 translate-middle\",\n    style: {\n      top: \"30px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"nav justify-content-start col text-white px-3\",\n      children: \"Reynan Kanindot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav justify-content-end col \",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item \",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#about\",\n          onClick: () => handlePageChange('About') // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          ,\n          className: currentPage === 'About' ? 'nav-link active' : 'nav-link',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"About Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#works\",\n          onClick: () => handlePageChange('Works') // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Works' ? 'nav-link active' : 'nav-link',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#contact\",\n          onClick: () => handlePageChange('Contact') // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#resume\",\n          onClick: () => handlePageChange('Resume') // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"Resume'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NavTabs;\nexport default NavTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"sources":["C:/Users/ekahi/Developments/Homeworks/Portfolio-React/src/components/NavBar.js"],"names":["React","NavTabs","currentPage","handlePageChange","top","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;;AACA,SAASC,OAAT,OAAoD;AAAA,MAAnC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAmC;AAChD,sBACI;AAAK,IAAA,SAAS,EAAC,6EAAf;AAA6F,IAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE,MAAN;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAApG;AAAA,4BAEI;AAAI,MAAA,SAAS,EAAC,+CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,OAAD,CAFnC,CAGI;AACA;AAJJ;AAKI,UAAA,SAAS,EAAED,WAAW,KAAK,OAAhB,GAA0B,iBAA1B,GAA8C,UAL7D;AAAA,iCAOI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,OAAD,CAFnC,CAGI;AAHJ;AAII,UAAA,SAAS,EAAED,WAAW,KAAK,OAAhB,GAA0B,iBAA1B,GAA8C,UAJ7D;AAAA,iCAMI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAuBI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,SAAD,CAFnC,CAGI;AAHJ;AAII,UAAA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAJ/D;AAAA,iCAMI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAiCI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,QAAD,CAFnC,CAGI;AAHJ;AAII,UAAA,SAAS,EAAED,WAAW,KAAK,SAAhB,GAA4B,iBAA5B,GAAgD,UAJ/D;AAAA,iCAMI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH;;KArDQD,O;AAuDT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\n\r\n// Here we are using object destructuring assignment to pluck off our variables from the props object\r\n// We assign them to their own variable names\r\nfunction NavTabs({ currentPage, handlePageChange }) {\r\n    return (\r\n        <div className='container row w-100 p-3 bg-info position-relative start-50 translate-middle' style={{top: \"30px\", width: \"100%\"}}>\r\n\r\n            <h2 className='nav justify-content-start col text-white px-3'>Reynan Kanindot</h2>\r\n            <ul className=\"nav justify-content-end col \">\r\n\r\n                <li className=\"nav-item \">\r\n                    <a\r\n                        href=\"#about\"\r\n                        onClick={() => handlePageChange('About')}\r\n                        // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\r\n                        // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\r\n                        className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\r\n                    >\r\n                        <span className='text-white'>About Me</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        href=\"#works\"\r\n                        onClick={() => handlePageChange('Works')}\r\n                        // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                        className={currentPage === 'Works' ? 'nav-link active' : 'nav-link'}\r\n                    >\r\n                        <span className='text-white'>Portfolio</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        href=\"#contact\"\r\n                        onClick={() => handlePageChange('Contact')}\r\n                        // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                        className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\r\n                    >\r\n                        <span className='text-white'>Contact</span>\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        href=\"#resume\"\r\n                        onClick={() => handlePageChange('Resume')}\r\n                        // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n                        className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\r\n                    >\r\n                        <span className='text-white'>Resume'</span>\r\n                    </a>\r\n                </li>\r\n\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavTabs;\r\n"]},"metadata":{},"sourceType":"module"}